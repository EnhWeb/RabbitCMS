@using System.Web.Optimization
@using Rabbit.Blogs.Services
@model Rabbit.Blogs.ViewModels.PostEditViewModel
@helper PageStyles()
{
    <style type="text/css">
        .field-validation-error {
            color: #dd4b39;
        }

        .categoryList {
            list-style: none;
        }

            .categoryList li {
                float: left;
                padding: 5px 30px;
            }
            .fastRoute a {
                cursor: pointer;
            }
    </style>
    <link href="~/Themes/TheAdmin/lib/iCheck/all.css" rel="stylesheet" />
}
@helper PageScripts()
{
    @Scripts.Render("~/bundles/jqueryvalidate", "~/bundles/jqueryform", "~/bundles/chineseHelper", "~/bundles/rabbitAdmin")
    <script src="~/Themes/TheAdmin/lib/iCheck/icheck.min.js"></script>
    <script src="~/Modules/Rabbit.Resources/Content/ueditor/ueditor.config.js"></script>
    <script src="~/Modules/Rabbit.Resources/Content/ueditor/ueditor.all.min.js"></script>
    <script type="text/javascript">
        var contentVal = $("[data-valmsg-for=Content]");
        var editor = UE.getEditor("content", { initialFrameHeight: 480, initialFrameWidth: "100%", initialContent: '@Html.Raw(Model.Content)' });
        editor.addListener("contentChange", function() {
            var content = editor.getContent();
            if (content == null || content.length == 0) {
                contentVal.show();
            } else {
                contentVal.hide();
            }
        });
        $(function() {
            $('input').iCheck({
                checkboxClass: 'icheckbox_square-blue',
                radioClass: 'iradio_square-blue',
                increaseArea: '20%' // optional
            });
        });

        var container = $(".box-info");
        var form = container.find("form");

        var txtTitle = form.find("#Title");
        var txtRoutePath = form.find("#Seo_RoutePath");

        txtTitle.keyup(function() {
            var value = $(this).val();
            var result = $.chineseHelper.toPinYin(value).toLowerCase();
            if (result.length > 50) {
                result = $.chineseHelper.toPinYinFirst(value).toLowerCase();
            }
            txtRoutePath.val(result);
        });
        txtRoutePath.change(function() {
            txtTitle.unbind("keyup");
        });
        var fastRoute = $(".fastRoute");
        fastRoute.find("a:first").click(function() {
            txtRoutePath.val($.chineseHelper.toPinYin(txtTitle.val()).toLowerCase());
        });
        fastRoute.find("a:last").click(function() {
            txtRoutePath.val($.chineseHelper.toPinYinFirst(txtTitle.val()).toLowerCase());
        });

        form.ajaxForm({
            beforeSerialize: function() {
                var ids = '';
                $(".categoryList input:checked").each(function() {
                    ids += $(this).val() + ",";
                });
                ids = ids.substring(0, ids.length - 1);
                $("#Categorys").val(ids);
            },
            beforeSubmit: function(array, f) {
                var content = editor.getContent();
                if (content == null || content.length === 0) {
                    contentVal.show();
                    return false;
                }
                return f.valid();
            },
            success: function(data) {
                var cId = form.find("#Id");
                var id = cId.val();
                if (data.success) {
                    $.rabbit().modalSuccess({
                        title: "提示",
                        body: "保存成功！",
                        showClose:false,
                        onOk: function() {
                            if (id != null && id.length > 0)
                                location.href = '@Url.Action("Index")';
                        }
                    });
                } else {
                    $.rabbit().modalSuccess({
                        title: "提示", body: "保存失败，" + data.message, showClose: false
                    });
                }
            },
            error: function () {
                $.rabbit().modalSuccess({
                    title: "提示", body: "保存失败，请联系管理员！", showClose: false
                });
            }
        });
    </script>
}
@{
    Layout.Styles = PageStyles();
    Layout.Scripts = PageScripts();
    Layout.Title = "博客分类管理";
    var isAdd = Model.Id == null;
}
<div class="box box-info">
    <div class="box-header with-border">
        <h3 class="box-title">@(isAdd ? "添加" : "编辑")文章</h3>
    </div><!-- /.box-header -->
    <!-- form start -->
    <form method="POST">
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Categorys)
        @Html.AntiForgeryToken()
        <div class="box-body">
            <div class="form-group">
                <label>@Html.DisplayNameFor(model => model.Title)</label>
                @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Title)
            </div>
            <div class="form-group">
                <label>@Html.DisplayNameFor(model => model.Content)</label>
                <script id="content" name="content" type="text/plain">
                </script>
                <span class="field-validation-error" data-valmsg-for="Content" data-valmsg-replace="true" style="display: none"><span for="Content" generated="true" class="">内容 字段是必需的。</span></span>
            </div>
            <div class="box box-warning">
                <div class="box-header with-border">
                    <h3 class="box-title" data-widget="collapse" style="cursor: pointer">SEO</h3>
                    <div class="box-tools pull-right">
                        <button class="btn btn-box-tool" data-widget="collapse" title="折叠"><i class="fa fa-minus"></i></button>
                    </div>
                </div>
                <div class="box-body">
                    <div class="form-horizontal">
                        <div class="form-group">
                            <label class="col-sm-2 control-label">@Html.DisplayNameFor(model => model.Seo.RoutePath)</label>
                            <div class="col-sm-10">
                                <div class="col-sm-8">
                                    @Html.TextBoxFor(model => model.Seo.RoutePath, new {@class = "form-control"})
                                    <div class="fastRoute">
                                        <a class="small">标题拼音</a> | <a class="small">标题拼音首字母</a>
                                    </div>
                                </div>
                                <div class="col-sm-2">
                                    @Html.ValidationMessageFor(model => model.Seo.RoutePath)
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">@Html.DisplayNameFor(model => model.Seo.Keywords)</label>
                            <div class="col-sm-10">
                                <div class="col-sm-8">
                                    @Html.TextBoxFor(model => model.Seo.Keywords, new {@class = "form-control", placeholder = "页面关键词用','号分隔。" })
                                </div>
                                <div class="col-sm-2">
                                    @Html.ValidationMessageFor(model => model.Seo.Keywords)
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">@Html.DisplayNameFor(model => model.Seo.Description)</label>
                            <div class="col-sm-10">
                                <div class="col-sm-8">
                                    @Html.TextAreaFor(model => model.Seo.Description,3,40, new { @class = "form-control", placeholder = "页面描述" })
                                </div>
                                <div class="col-sm-2">
                                    @Html.ValidationMessageFor(model => model.Seo.Description)
                                </div>
                            </div>
                        </div>
                    </div>
                </div><!-- /.box-body -->
            </div>
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title" data-widget="collapse" style="cursor: pointer">文章分类</h3>
                    <div class="box-tools pull-right">
                        <button class="btn btn-box-tool" data-widget="collapse" title="折叠"><i class="fa fa-minus"></i></button>
                    </div>
                </div>
                <div class="box-body">
                    @{
                        var categoryList = WorkContext.Resolve<ICategoryService>().GetList();
                        var selectedCategoryList = Model.Categorys == null ? new string[0] : Model.Categorys.Split(new[] {','}, StringSplitOptions.RemoveEmptyEntries);
                        }
                        @if (categoryList == null)
                        {
                            <div style="color: grey; text-align: center">暂无分类！</div>
                        }
                        else
                        {
                            <ul class="categoryList">
                                @foreach (var category in categoryList)
                                {
                                    var tagBuilder = new TagBuilder("input");
                                    tagBuilder.Attributes["type"] = "checkbox";
                                    tagBuilder.Attributes["value"] = category.Id;
                                    if (selectedCategoryList.Contains(category.Id))
                                    {
                                        tagBuilder.Attributes["checked"] = "checked";
                                    }
                                    <li>
                                        @Html.Raw(tagBuilder.ToString(TagRenderMode.SelfClosing))
                                        @category.Title
                                    </li>
                                }
                            </ul>
                        }
                </div><!-- /.box-body -->
            </div>
            <div class="box box-success">
                <div class="box-header with-border">
                    <h3 class="box-title" data-widget="collapse" style="cursor: pointer">高级选项</h3>
                    <div class="box-tools pull-right">
                        <button class="btn btn-box-tool" data-widget="collapse" title="折叠"><i class="fa fa-minus"></i></button>
                    </div>
                </div>
                <div class="box-body">
                    <div class="form-horizontal">
                        <div class="form-group">
                            <label class="col-sm-2 control-label">设置</label>
                            <div class="col-sm-10">
                                <ul class="categoryList">
                                    <li>
                                        @Html.CheckBoxFor(model => model.AllowComment) 允许评论
                                    </li>
                                    <li>
                                        @Html.CheckBoxFor(model => model.ShowInIndex) 显示在博客首页
                                    </li>
                                    <li>
                                        @Html.CheckBoxFor(model => model.IsPublish) 发布
                                    </li>
                                </ul>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">@Html.DisplayNameFor(model => model.Summary)</label>
                            <div class="col-sm-10">
                                <div class="col-sm-8">
                                    @Html.TextAreaFor(model => model.Summary, 3, 40, new { @class = "form-control" })
                                </div>
                                <div class="col-sm-2">
                                    @Html.ValidationMessageFor(model => model.Summary)
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">@Html.DisplayNameFor(model => model.OppositionCount)</label>
                            <div class="col-sm-10">
                                <div class="col-sm-8">
                                    @Html.TextBoxFor(model => model.OppositionCount, new { @class = "form-control" })
                                </div>
                                <div class="col-sm-2">
                                    @Html.ValidationMessageFor(model => model.OppositionCount)
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">@Html.DisplayNameFor(model => model.ReadingCount)</label>
                            <div class="col-sm-10">
                                <div class="col-sm-8">
                                    @Html.TextBoxFor(model => model.ReadingCount, new { @class = "form-control" })
                                </div>
                                <div class="col-sm-2">
                                    @Html.ValidationMessageFor(model => model.ReadingCount)
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">@Html.DisplayNameFor(model => model.RecommendationCount)</label>
                            <div class="col-sm-10">
                                <div class="col-sm-8">
                                    @Html.TextBoxFor(model => model.RecommendationCount, new { @class = "form-control" })
                                </div>
                                <div class="col-sm-2">
                                    @Html.ValidationMessageFor(model => model.RecommendationCount)
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">@Html.DisplayNameFor(model => model.Tags)</label>
                            <div class="col-sm-10">
                                <div class="col-sm-8">
                                    @Html.TextBoxFor(model => model.Tags, new { @class = "form-control" })
                                    （多个关键字之间用“,”分隔）
                                </div>
                                <div class="col-sm-2">
                                    @Html.ValidationMessageFor(model => model.Tags)
                                </div>
                            </div>
                        </div>
                    </div>
                </div><!-- /.box-body -->
            </div>
        </div><!-- /.box-body -->
        <div class="box-footer" style="text-align: center">
            <button type="submit" class="btn btn-info">保存</button>
            <button type="submit" class="btn btn-default">取消</button>
        </div><!-- /.box-footer -->
    </form>
</div>